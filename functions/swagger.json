{
  "openapi": "3.0.0",
  "info": {
    "title": "EventManager docs",
    "description": "Documentation for EventManager API.",
    "version": "1.0.0"
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdEvents": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subscribedEvents": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name", "surname", "email"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": ["message"]
      },
      "ExtendedError": {
        "allOf": [
          { "$ref": "#/components/schemas/Error" },
          {
            "properties": {
              "location": {
                "type": "string"
              },
              "param": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Users": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      }
    }
  },
  "paths": {
    "/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Subscribe a new user.",
        "description": "Subscribe a new user in the system saving the given informations.",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "Email of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "body",
            "description": "Password of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "password",
              "minLength": 6
            }
          },
          {
            "name": "name",
            "in": "body",
            "description": "Name of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "surname",
            "in": "body",
            "description": "Surname of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "Signin with email and password.",
        "description": "Returns a JWT token to use to access resources.",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "Email of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "body",
            "description": "Password of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "password",
              "minLength": 6
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Incorrect parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["User"],
        "summary": "Gets a list of users.",
        "description": "Gets a list of all users' information saved into database.",
        "responses": {
          "200": {
            "description": "Succesful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users?email=email": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "The email of the user."
          }
        ],
        "tags": ["User"],
        "summary": "Gets a user with the specified email.",
        "description": "Gets a user with the specified email deleting the events to which he it is registered.",
        "responses": {
          "200": {
            "description": "Succesful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user id."
          }
        ],
        "tags": ["User"],
        "summary": "Gets a user with the specified id.",
        "description": "Gets a user with the specified id deleting the events to which he it is registered.",
        "responses": {
          "200": {
            "description": "Succesful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user id."
          },
          {
            "in": "body",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "The name of the user."
          },
          {
            "in": "body",
            "name": "surname",
            "schema": {
              "type": "string"
            },
            "description": "The surname of the user."
          }
        ],
        "tags": ["User"],
        "summary": "Update the information about the user.",
        "description": "Update the information about the specified user. At least one parameter must be updated.",
        "responses": {
          "200": {
            "description": "Succesful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user id."
          }
        ],
        "tags": ["User"],
        "summary": "Delete a user.",
        "description": "Delete the information about the specified user.",
        "responses": {
          "200": {
            "description": "Succesful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}
